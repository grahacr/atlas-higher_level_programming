'Test file for base_geometry module'


>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

'regular test with valid integer'
>>> bg = BaseGeometry
>>> bg.integer_validator("square", 10)

'area method'
>>> bg = BaseGeometry()
>>> bg.area()
Traceback (most recent call last):
...
Exception: area() is not implemented

'integer is zero'
>>> bg = BaseGeometry()
>>> bg.integer_validator("rectangle", 0)
Traceback (most recent call last):
...
ValueError: rectangle must be greater than 0

'no arguments'
>>> bg = BaseGeometry()
>>> bg.integer_validator()
Traceback (most recent call last):
...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

'non integer test'
>>> bg = BaseGeometry()
>>> bg.integer_validator("donut", "hole")
Traceback (most recent call last):
...
TypeError: donut must be an integer

'negative integer'
>>> bg = BaseGeometry()
>>> bg.integer_validator("triangle", -7)
Traceback (most recent call last):
...
ValueError: triangle must be an integer